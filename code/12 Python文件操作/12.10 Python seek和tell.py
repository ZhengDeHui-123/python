#实现对文件指针的移动，文件对象提供了 tell() 函数和 seek() 函数。
# tell() 函数用于判断文件指针当前所处的位置，而 seek() 函数用于移动文件指针到文件的指定位置。

'''tell() 函数'''

# f = open("a.txt",'r',encoding='utf-8')
# print(f.tell())
# print(f.read(3))
# print(f.tell())

'''
可以看到，当使用 open() 函数打开文件时，文件指针的起始位置为 0，表示位于文件的开头处，
当使用 read() 函数从文件中读取 3 个字符之后，文件指针同时向后移动了 3 个字符的位置。
这就表明，当程序使用文件对象读写数据时，文件指针会自动向后移动：读写了多少个数据，文
件指针就自动向后移动多少个位置。
'''

'''
seek()函数
seek() 函数用于将文件指针移动至指定位置，该函数的语法格式如下：
file.seek(offset[, whence])

其中，各个参数的含义如下：
file：表示文件对象；
whence：作为可选参数，用于指定文件指针要放置的位置，该参数的参数值有 3 个选择：0 代表文件头（默认值）、1 代表当前位置、2 代表文件尾。
offset：表示相对于 whence 位置文件指针的偏移量，正数表示向后偏移，负数表示向前偏移。例如，当whence == 0 &&offset == 3（即 seek(3,0) ），表示文件指针移动至距离文件开头处 3 个字符的位置；当whence == 1 &&offset == 5（即 seek(5,1) ），表示文件指针向后移动，移动至距离当前位置 5 个字符处。
注意，当 offset 值非 0 时，Python 要求文件必须要以二进制格式打开，否则会抛出 io.UnsupportedOperation 错误。

'''

#下面程序示范了文件指针操作：
f = open('a.txt', 'rb')
# 判断文件指针的位置
print(f.tell())
# 读取一个字节，文件指针自动后移1个数据
print(f.read(1))
print(f.tell())
# 将文件指针从文件开头，向后移动到 5 个字符的位置
f.seek(5)
print(f.tell())
print(f.read(1))
# 将文件指针从当前位置，向后移动到 5 个字符的位置
f.seek(5, 1)
print(f.tell())
print(f.read(1))
# 将文件指针从文件结尾，向前移动到距离 2 个字符的位置
f.seek(-1, 2)
print(f.tell())
print(f.read(1))

#注意：由于程序中使用 seek() 时，使用了非 0 的偏移量，因此文件的打开方式中必须包含 b，
# 否则就会报  io.UnsupportedOperation 错误，有兴趣的读者可自定尝试。
